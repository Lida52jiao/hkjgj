package com.battcn.entity;

import java.util.ArrayList;
import java.util.List;

public class AgentBasePriceExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_mp_agentbaseprice
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_mp_agentbaseprice
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_mp_agentbaseprice
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mp_agentbaseprice
     *
     * @mbggenerated
     */
    public AgentBasePriceExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mp_agentbaseprice
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mp_agentbaseprice
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mp_agentbaseprice
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mp_agentbaseprice
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mp_agentbaseprice
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mp_agentbaseprice
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mp_agentbaseprice
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mp_agentbaseprice
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mp_agentbaseprice
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_mp_agentbaseprice
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_mp_agentbaseprice
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andAgentlevelIsNull() {
            addCriterion("agentlevel is null");
            return (Criteria) this;
        }

        public Criteria andAgentlevelIsNotNull() {
            addCriterion("agentlevel is not null");
            return (Criteria) this;
        }

        public Criteria andAgentlevelEqualTo(String value) {
            addCriterion("agentlevel =", value, "agentlevel");
            return (Criteria) this;
        }

        public Criteria andAgentlevelNotEqualTo(String value) {
            addCriterion("agentlevel <>", value, "agentlevel");
            return (Criteria) this;
        }

        public Criteria andAgentlevelGreaterThan(String value) {
            addCriterion("agentlevel >", value, "agentlevel");
            return (Criteria) this;
        }

        public Criteria andAgentlevelGreaterThanOrEqualTo(String value) {
            addCriterion("agentlevel >=", value, "agentlevel");
            return (Criteria) this;
        }

        public Criteria andAgentlevelLessThan(String value) {
            addCriterion("agentlevel <", value, "agentlevel");
            return (Criteria) this;
        }

        public Criteria andAgentlevelLessThanOrEqualTo(String value) {
            addCriterion("agentlevel <=", value, "agentlevel");
            return (Criteria) this;
        }

        public Criteria andAgentlevelLike(String value) {
            addCriterion("agentlevel like", value, "agentlevel");
            return (Criteria) this;
        }

        public Criteria andAgentlevelNotLike(String value) {
            addCriterion("agentlevel not like", value, "agentlevel");
            return (Criteria) this;
        }

        public Criteria andAgentlevelIn(List<String> values) {
            addCriterion("agentlevel in", values, "agentlevel");
            return (Criteria) this;
        }

        public Criteria andAgentlevelNotIn(List<String> values) {
            addCriterion("agentlevel not in", values, "agentlevel");
            return (Criteria) this;
        }

        public Criteria andAgentlevelBetween(String value1, String value2) {
            addCriterion("agentlevel between", value1, value2, "agentlevel");
            return (Criteria) this;
        }

        public Criteria andAgentlevelNotBetween(String value1, String value2) {
            addCriterion("agentlevel not between", value1, value2, "agentlevel");
            return (Criteria) this;
        }

        public Criteria andRepayfeeIsNull() {
            addCriterion("repayfee is null");
            return (Criteria) this;
        }

        public Criteria andRepayfeeIsNotNull() {
            addCriterion("repayfee is not null");
            return (Criteria) this;
        }

        public Criteria andRepayfeeEqualTo(Double value) {
            addCriterion("repayfee =", value, "repayfee");
            return (Criteria) this;
        }

        public Criteria andRepayfeeNotEqualTo(Double value) {
            addCriterion("repayfee <>", value, "repayfee");
            return (Criteria) this;
        }

        public Criteria andRepayfeeGreaterThan(Double value) {
            addCriterion("repayfee >", value, "repayfee");
            return (Criteria) this;
        }

        public Criteria andRepayfeeGreaterThanOrEqualTo(Double value) {
            addCriterion("repayfee >=", value, "repayfee");
            return (Criteria) this;
        }

        public Criteria andRepayfeeLessThan(Double value) {
            addCriterion("repayfee <", value, "repayfee");
            return (Criteria) this;
        }

        public Criteria andRepayfeeLessThanOrEqualTo(Double value) {
            addCriterion("repayfee <=", value, "repayfee");
            return (Criteria) this;
        }

        public Criteria andRepayfeeIn(List<Double> values) {
            addCriterion("repayfee in", values, "repayfee");
            return (Criteria) this;
        }

        public Criteria andRepayfeeNotIn(List<Double> values) {
            addCriterion("repayfee not in", values, "repayfee");
            return (Criteria) this;
        }

        public Criteria andRepayfeeBetween(Double value1, Double value2) {
            addCriterion("repayfee between", value1, value2, "repayfee");
            return (Criteria) this;
        }

        public Criteria andRepayfeeNotBetween(Double value1, Double value2) {
            addCriterion("repayfee not between", value1, value2, "repayfee");
            return (Criteria) this;
        }

        public Criteria andNocardintegralfeeIsNull() {
            addCriterion("nocardintegralfee is null");
            return (Criteria) this;
        }

        public Criteria andNocardintegralfeeIsNotNull() {
            addCriterion("nocardintegralfee is not null");
            return (Criteria) this;
        }

        public Criteria andNocardintegralfeeEqualTo(Double value) {
            addCriterion("nocardintegralfee =", value, "nocardintegralfee");
            return (Criteria) this;
        }

        public Criteria andNocardintegralfeeNotEqualTo(Double value) {
            addCriterion("nocardintegralfee <>", value, "nocardintegralfee");
            return (Criteria) this;
        }

        public Criteria andNocardintegralfeeGreaterThan(Double value) {
            addCriterion("nocardintegralfee >", value, "nocardintegralfee");
            return (Criteria) this;
        }

        public Criteria andNocardintegralfeeGreaterThanOrEqualTo(Double value) {
            addCriterion("nocardintegralfee >=", value, "nocardintegralfee");
            return (Criteria) this;
        }

        public Criteria andNocardintegralfeeLessThan(Double value) {
            addCriterion("nocardintegralfee <", value, "nocardintegralfee");
            return (Criteria) this;
        }

        public Criteria andNocardintegralfeeLessThanOrEqualTo(Double value) {
            addCriterion("nocardintegralfee <=", value, "nocardintegralfee");
            return (Criteria) this;
        }

        public Criteria andNocardintegralfeeIn(List<Double> values) {
            addCriterion("nocardintegralfee in", values, "nocardintegralfee");
            return (Criteria) this;
        }

        public Criteria andNocardintegralfeeNotIn(List<Double> values) {
            addCriterion("nocardintegralfee not in", values, "nocardintegralfee");
            return (Criteria) this;
        }

        public Criteria andNocardintegralfeeBetween(Double value1, Double value2) {
            addCriterion("nocardintegralfee between", value1, value2, "nocardintegralfee");
            return (Criteria) this;
        }

        public Criteria andNocardintegralfeeNotBetween(Double value1, Double value2) {
            addCriterion("nocardintegralfee not between", value1, value2, "nocardintegralfee");
            return (Criteria) this;
        }

        public Criteria andNocardintegraldfeeIsNull() {
            addCriterion("nocardintegraldfee is null");
            return (Criteria) this;
        }

        public Criteria andNocardintegraldfeeIsNotNull() {
            addCriterion("nocardintegraldfee is not null");
            return (Criteria) this;
        }

        public Criteria andNocardintegraldfeeEqualTo(Integer value) {
            addCriterion("nocardintegraldfee =", value, "nocardintegraldfee");
            return (Criteria) this;
        }

        public Criteria andNocardintegraldfeeNotEqualTo(Integer value) {
            addCriterion("nocardintegraldfee <>", value, "nocardintegraldfee");
            return (Criteria) this;
        }

        public Criteria andNocardintegraldfeeGreaterThan(Integer value) {
            addCriterion("nocardintegraldfee >", value, "nocardintegraldfee");
            return (Criteria) this;
        }

        public Criteria andNocardintegraldfeeGreaterThanOrEqualTo(Integer value) {
            addCriterion("nocardintegraldfee >=", value, "nocardintegraldfee");
            return (Criteria) this;
        }

        public Criteria andNocardintegraldfeeLessThan(Integer value) {
            addCriterion("nocardintegraldfee <", value, "nocardintegraldfee");
            return (Criteria) this;
        }

        public Criteria andNocardintegraldfeeLessThanOrEqualTo(Integer value) {
            addCriterion("nocardintegraldfee <=", value, "nocardintegraldfee");
            return (Criteria) this;
        }

        public Criteria andNocardintegraldfeeIn(List<Integer> values) {
            addCriterion("nocardintegraldfee in", values, "nocardintegraldfee");
            return (Criteria) this;
        }

        public Criteria andNocardintegraldfeeNotIn(List<Integer> values) {
            addCriterion("nocardintegraldfee not in", values, "nocardintegraldfee");
            return (Criteria) this;
        }

        public Criteria andNocardintegraldfeeBetween(Integer value1, Integer value2) {
            addCriterion("nocardintegraldfee between", value1, value2, "nocardintegraldfee");
            return (Criteria) this;
        }

        public Criteria andNocardintegraldfeeNotBetween(Integer value1, Integer value2) {
            addCriterion("nocardintegraldfee not between", value1, value2, "nocardintegraldfee");
            return (Criteria) this;
        }

        public Criteria andHcardintegralfeeIsNull() {
            addCriterion("hcardintegralfee is null");
            return (Criteria) this;
        }

        public Criteria andHcardintegralfeeIsNotNull() {
            addCriterion("hcardintegralfee is not null");
            return (Criteria) this;
        }

        public Criteria andHcardintegralfeeEqualTo(Double value) {
            addCriterion("hcardintegralfee =", value, "hcardintegralfee");
            return (Criteria) this;
        }

        public Criteria andHcardintegralfeeNotEqualTo(Double value) {
            addCriterion("hcardintegralfee <>", value, "hcardintegralfee");
            return (Criteria) this;
        }

        public Criteria andHcardintegralfeeGreaterThan(Double value) {
            addCriterion("hcardintegralfee >", value, "hcardintegralfee");
            return (Criteria) this;
        }

        public Criteria andHcardintegralfeeGreaterThanOrEqualTo(Double value) {
            addCriterion("hcardintegralfee >=", value, "hcardintegralfee");
            return (Criteria) this;
        }

        public Criteria andHcardintegralfeeLessThan(Double value) {
            addCriterion("hcardintegralfee <", value, "hcardintegralfee");
            return (Criteria) this;
        }

        public Criteria andHcardintegralfeeLessThanOrEqualTo(Double value) {
            addCriterion("hcardintegralfee <=", value, "hcardintegralfee");
            return (Criteria) this;
        }

        public Criteria andHcardintegralfeeIn(List<Double> values) {
            addCriterion("hcardintegralfee in", values, "hcardintegralfee");
            return (Criteria) this;
        }

        public Criteria andHcardintegralfeeNotIn(List<Double> values) {
            addCriterion("hcardintegralfee not in", values, "hcardintegralfee");
            return (Criteria) this;
        }

        public Criteria andHcardintegralfeeBetween(Double value1, Double value2) {
            addCriterion("hcardintegralfee between", value1, value2, "hcardintegralfee");
            return (Criteria) this;
        }

        public Criteria andHcardintegralfeeNotBetween(Double value1, Double value2) {
            addCriterion("hcardintegralfee not between", value1, value2, "hcardintegralfee");
            return (Criteria) this;
        }

        public Criteria andHcardintegraldfeeIsNull() {
            addCriterion("hcardintegraldfee is null");
            return (Criteria) this;
        }

        public Criteria andHcardintegraldfeeIsNotNull() {
            addCriterion("hcardintegraldfee is not null");
            return (Criteria) this;
        }

        public Criteria andHcardintegraldfeeEqualTo(Integer value) {
            addCriterion("hcardintegraldfee =", value, "hcardintegraldfee");
            return (Criteria) this;
        }

        public Criteria andHcardintegraldfeeNotEqualTo(Integer value) {
            addCriterion("hcardintegraldfee <>", value, "hcardintegraldfee");
            return (Criteria) this;
        }

        public Criteria andHcardintegraldfeeGreaterThan(Integer value) {
            addCriterion("hcardintegraldfee >", value, "hcardintegraldfee");
            return (Criteria) this;
        }

        public Criteria andHcardintegraldfeeGreaterThanOrEqualTo(Integer value) {
            addCriterion("hcardintegraldfee >=", value, "hcardintegraldfee");
            return (Criteria) this;
        }

        public Criteria andHcardintegraldfeeLessThan(Integer value) {
            addCriterion("hcardintegraldfee <", value, "hcardintegraldfee");
            return (Criteria) this;
        }

        public Criteria andHcardintegraldfeeLessThanOrEqualTo(Integer value) {
            addCriterion("hcardintegraldfee <=", value, "hcardintegraldfee");
            return (Criteria) this;
        }

        public Criteria andHcardintegraldfeeIn(List<Integer> values) {
            addCriterion("hcardintegraldfee in", values, "hcardintegraldfee");
            return (Criteria) this;
        }

        public Criteria andHcardintegraldfeeNotIn(List<Integer> values) {
            addCriterion("hcardintegraldfee not in", values, "hcardintegraldfee");
            return (Criteria) this;
        }

        public Criteria andHcardintegraldfeeBetween(Integer value1, Integer value2) {
            addCriterion("hcardintegraldfee between", value1, value2, "hcardintegraldfee");
            return (Criteria) this;
        }

        public Criteria andHcardintegraldfeeNotBetween(Integer value1, Integer value2) {
            addCriterion("hcardintegraldfee not between", value1, value2, "hcardintegraldfee");
            return (Criteria) this;
        }

        public Criteria andRepayrollIsNull() {
            addCriterion("repayroll is null");
            return (Criteria) this;
        }

        public Criteria andRepayrollIsNotNull() {
            addCriterion("repayroll is not null");
            return (Criteria) this;
        }

        public Criteria andRepayrollEqualTo(Double value) {
            addCriterion("repayroll =", value, "repayroll");
            return (Criteria) this;
        }

        public Criteria andRepayrollNotEqualTo(Double value) {
            addCriterion("repayroll <>", value, "repayroll");
            return (Criteria) this;
        }

        public Criteria andRepayrollGreaterThan(Double value) {
            addCriterion("repayroll >", value, "repayroll");
            return (Criteria) this;
        }

        public Criteria andRepayrollGreaterThanOrEqualTo(Double value) {
            addCriterion("repayroll >=", value, "repayroll");
            return (Criteria) this;
        }

        public Criteria andRepayrollLessThan(Double value) {
            addCriterion("repayroll <", value, "repayroll");
            return (Criteria) this;
        }

        public Criteria andRepayrollLessThanOrEqualTo(Double value) {
            addCriterion("repayroll <=", value, "repayroll");
            return (Criteria) this;
        }

        public Criteria andRepayrollIn(List<Double> values) {
            addCriterion("repayroll in", values, "repayroll");
            return (Criteria) this;
        }

        public Criteria andRepayrollNotIn(List<Double> values) {
            addCriterion("repayroll not in", values, "repayroll");
            return (Criteria) this;
        }

        public Criteria andRepayrollBetween(Double value1, Double value2) {
            addCriterion("repayroll between", value1, value2, "repayroll");
            return (Criteria) this;
        }

        public Criteria andRepayrollNotBetween(Double value1, Double value2) {
            addCriterion("repayroll not between", value1, value2, "repayroll");
            return (Criteria) this;
        }

        public Criteria andChargewithdrawIsNull() {
            addCriterion("chargewithdraw is null");
            return (Criteria) this;
        }

        public Criteria andChargewithdrawIsNotNull() {
            addCriterion("chargewithdraw is not null");
            return (Criteria) this;
        }

        public Criteria andChargewithdrawEqualTo(Double value) {
            addCriterion("chargewithdraw =", value, "chargewithdraw");
            return (Criteria) this;
        }

        public Criteria andChargewithdrawNotEqualTo(Double value) {
            addCriterion("chargewithdraw <>", value, "chargewithdraw");
            return (Criteria) this;
        }

        public Criteria andChargewithdrawGreaterThan(Double value) {
            addCriterion("chargewithdraw >", value, "chargewithdraw");
            return (Criteria) this;
        }

        public Criteria andChargewithdrawGreaterThanOrEqualTo(Double value) {
            addCriterion("chargewithdraw >=", value, "chargewithdraw");
            return (Criteria) this;
        }

        public Criteria andChargewithdrawLessThan(Double value) {
            addCriterion("chargewithdraw <", value, "chargewithdraw");
            return (Criteria) this;
        }

        public Criteria andChargewithdrawLessThanOrEqualTo(Double value) {
            addCriterion("chargewithdraw <=", value, "chargewithdraw");
            return (Criteria) this;
        }

        public Criteria andChargewithdrawIn(List<Double> values) {
            addCriterion("chargewithdraw in", values, "chargewithdraw");
            return (Criteria) this;
        }

        public Criteria andChargewithdrawNotIn(List<Double> values) {
            addCriterion("chargewithdraw not in", values, "chargewithdraw");
            return (Criteria) this;
        }

        public Criteria andChargewithdrawBetween(Double value1, Double value2) {
            addCriterion("chargewithdraw between", value1, value2, "chargewithdraw");
            return (Criteria) this;
        }

        public Criteria andChargewithdrawNotBetween(Double value1, Double value2) {
            addCriterion("chargewithdraw not between", value1, value2, "chargewithdraw");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_mp_agentbaseprice
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_mp_agentbaseprice
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}